---
title: "Learning Reflection"
subtitle: "Week 2"
format: html
editor: visual
---

# Learning reflections

Learning reflections are part of your weekly homework and have a weight of 20% of your final grade. Write a reflection in your own words on the different parts of the weeks material below. You can also use your learning reflections as a notebook as you work through exercises or readings. Write as much as you like, but a minimum of 100 words in total.

# Lecture

# Homework Assignment

From the homework assignment i learned to self navigate github, while following the instuctions i was able to notice the chage in the data, the manipulations or rather mutations (tidying and tranforming data).

New things learned;

mutate()

Creates new columns based on existing ones ,Keeps the original data frame structure and Can add multiple new columns at once

aes()

stands for aesthetics, and itâ€™s a key function used to map variables to visual properties of a plot like x and y axes, color, size, shape, etc.

labs()

is short for labels It is used in ploting to add or customize titles, Axis labels (x and y)

Selecting and renaming tidying

# Reading Assignment

The finedtroduction to R for data science gave a clear overview of what the field of data science involves and how R can be a powerful tool. I appreciate how the authors break down the data science workflow into practical steps importing, tidying, transforming, visualizing, modeling, and communicating making it feel more manageable. Gave more insight after practice of the homework gave more clear understanding of the concepts.

One key takeaway was how essential it is to have tidy data; the idea that a consistent format helps you focus on asking meaningful questions. Like in the homework assignment we had to select some data from the large dataset, rename it , the also finally transform it. This eventually helps with the visualization, so you have to think ahead what would i want to derive or represent with this data.

# Submit learning reflections

## Stage, Commit & Push to GitHub

This final section introduces the workflow you need to follow at the end of each live coding exercise, homework assignment, learning reflection. It ensures that all the changes you have made to files in this repository (folder) are synced with the version that is stored on GitHub. The steps will be described at the end of each of the files.

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed week 2 learning reflection") in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Click **Push** to send your changes to GitHub.
6.  Go to your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username) and refresh the page. You should see your commit message next to the updated files.

## Open an issue on GitHub

Once you have ensured that the Quarto document renders without errors and you have pushed all your changes to GitHub, it is to complete the assignment by opening an issue on your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username).

1.  Navigate to your wk-02-USERNAME GitHub repo (where USERNAME is your GitHub username).
2.  Click on **Issues**, and then **New issue** button.
3.  Write a meaningful title in the **Title** field
4.  Tag the course instructor with using the `@` sign in combination with `larnsce` as the username
5.  Add any questions or comments
